swagger: "2.0"
info:
  description: "BlaynCafe root API"
  version: "0.1.0"
  title: "BlaynCafe API"
basePath: "/api"
tags:
- name: "Student"
- name: "Event"
- name: "Sponsor"
- name: "Admin"
- name: "Image"
consumes:
- "application/json"
produces:
- "application/json"
schemes:
- "http"
paths:
  /student/register:
    post:
      tags:
      - "Student"
      summary: "Register new student"
      operationId: "newStudent"
      parameters: 
      - in: "body"
        name: "student"
        description: "Student information"
        schema:
          $ref: "#/definitions/Student"
      responses:
        405:
          description: "Invalid information"
        201:
          description: "Successful registed as new Student"
          schema:
            type: "string"
            description: "A random barcode for Student"
  /student/login:
    get:
      tags:
      - "Student"
      summary: "Student login"
      responses:
        401:
          description: "Invalidate email or password"
        200:
          description: "Login successful"
          schema:
            $ref: "#/definitions/AccessToken"
  /student/logout:
    get:
      tags:
      - "Student"
      summary: "Student logout"
      security:
      - StudentSecurity: []
      responses:
        200:
          description: "Logout successful"
  /student/event:
    get:
      tags:
      - "Event"
      - "Student"
      summary: "View student applied events"
      operationId: "studentListEvent"
      parameters:
      - name: "limit"
        in: "query"
        description: "Limit the number of return results"
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Offset of the return results"
        required: false
        type: "integer"
      security:
      - StudentSecurity: []
      responses:
        405:
          description: "Invalid input"
        401:
          description: "Invalidate access token"
        200:
          description: "Return all events which student applied"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
  /student/event/join:
    post:
      tags:
      - "Event"
      - "Student"
      summary: "Enroll student to an event"
      parameters:
      - in: "body"
        name: "eventId"
        description: "ID of the event which student wants to join"
        required: true
        schema:
          type: "string"
      responses:
        405:
          description: "Invalid event ID"
        401:
          description: "Invalidate access token"
        200:
          description: "Successful enrolled event"
  /student/event/cancel:
    post:
      tags:
      - "Event"
      - "Student"
      summary: "Cancel an event which student enrolled before"
      parameters:
      - in: "body"
        name: "eventId"
        description: "ID of the event which student wants to join"
        required: true
        schema:
          type: "string"
      security:
      - StudentSecurity: []
      responses:
        405:
          description: "Invalid event ID or enrollment cannot be cancel"
        401:
          description: "Invalidate access token"
        200:
          description: "Successful enrolled event"
  /sponsor/event:
    get:
      tags:
      - "Event"
      - "Sponsor"
      summary: "View sponsor created events"
      operationId: "sponsorListEvent"
      parameters:
      - name: "limit"
        in: "query"
        description: "Limit the number of return results"
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Offset of the return results"
        required: false
        type: "integer"
      security:
      - SponsorSecurity: []
      responses:
        405:
          description: "Invalid input"
        401:
          description: "Invalid access token"
        200:
          description: "Return all events which sponsor created"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
    post:
      tags:
      - "Event"
      - "Sponsor"
      summary: "Submit an event"
      parameters:
      - in: "body"
        name: "event"
        description: "Event's information which sponsor want to create"
        schema:
          $ref: "#/definitions/Event"
      security:
      - SponsorSecurity: []
      responses:
        405:
          description: "Invalid input"
        401:
          description: "Invalid access token"
        201:
          description: "Successful submiited new event"
  /sponsor/event/cancel:
    post:
      tags:
      - "Event"
      - "Sponsor"
      summary: "Cancel an event which sponsor created before"
      parameters:
      - in: "body"
        name: "eventId"
        description: "ID of the event which sponsor wants to cancel"
        required: true
        schema:
          type: "string"
      security:
      - SponsorSecurity: []
      responses:
        405:
          description: "Invalid event ID or enrollment cannot be cancel"
        401:
          description: "Invalidate access token"
        200:
          description: "Successful enrolled event"
  /sponsor/login:
    get:
      tags:
      - "Sponsor"
      summary: "Sponsor login"
      responses:
        401:
          description: "Invalidate email or password"
        200:
          description: "Login successful"
          schema:
            $ref: "#/definitions/AccessToken"
  /sponsor/logout:
    get:
      tags:
      - "Sponsor"
      summary: "Sponsor logout"
      security:
      - SponsorSecurity: []
      responses:
        200:
          description: "Logout successful"
  /student:
    get:
      tags:
      - "Admin"
      summary: "View list students"
      description: ""
      operationId: "studentList"
      parameters:
      - name: "limit"
        in: "query"
        description: "Limit the number of return results"
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Offset of the return results"
        required: false
        type: "integer"
      responses:
        405:
          description: "Invalid input"
        401:
          description: "Invalidate access token"
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Student"
      security:
      - AdminSecurity: []
  /sponsor:
    get:
      tags:
      - "Admin"
      summary: "View list sponsor"
      description: ""
      operationId: "sponsorList"
      parameters:
      - name: "limit"
        in: "query"
        description: "Limit the number of return results"
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Offset of the return results"
        required: false
        type: "integer"
      responses:
        405:
          description: "Invalid input"
        401:
          description: "Invalidate access token"
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Sponsor"
      security:
      - AdminSecurity: []
      
securityDefinitions:
  AdminSecurity:
    type: "apiKey"
    name: "ADMIN-API-KEY"
    in: "header"
  StudentSecurity:
    type: "apiKey"
    name: "STUDENT-API-KEY"
    in: "header"
  SponsorSecurity:
    type: "apiKey"
    name: "SPONSOR-API-KEY"
    in: "header"
definitions:
  Sponsor:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      companyName:
        type: "string"
        maxLength: 255
      staffName:
        type: "string"
        maxLength: 255
      staffRubyName:
        type: "string"
        maxLength: 255
      companyAddress:
        type: "string"
      companyPhoneNumber:
        type: "string"
      email:
        type: "string"
        format: "email"
      password:
        type: "string"
        format: "password"
      departure:
        type: "string"
      position:
        type: "string"
  Student:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        maxLength: 255
      email:
        type: "string"
        format: "email"
      admissionYear:
        type: "string"
        minimum: 2010
        maximum: 2050
      department:
        type: "string"
      dateOfBirth:
        type: "string"
        format: "date"
      password:
        type: "string"
        format: "password"
      studentCard:
        type: "string"
        format: "url"
      image:
        type: "string"
        format: "url"
      studentNumber:
        type: "string"
  Event:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        maxLength: 1000
      date:
        type: "string"
        format: "date"
      time:
        type: "string"
        format: "date-time"
      recruitmentNumbers:
        type: "integer"
        maximum: 5
        minimum: 1
      images:
        type: "array"
        items:
          type: "string"
          format: "url"
  AccessToken:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      accessToken:
        type: "string"
      expireTime:
        type: "integer"
        format: "int64"